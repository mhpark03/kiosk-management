plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.kiosk'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // Actuator for health checks (AWS Elastic Beanstalk)
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Database Drivers
    runtimeOnly 'com.mysql:mysql-connector-j'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // API Documentation (Swagger/OpenAPI)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    // AWS S3
    implementation platform('software.amazon.awssdk:bom:2.20.26')
    implementation 'software.amazon.awssdk:s3'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

// JAR 이름 고정 (AWS 배포 시 편의를 위해)
bootJar {
    archiveFileName = 'backend-0.0.1-SNAPSHOT.jar'
}

// Task to download Google TTS credentials from S3
task downloadCredentials(type: JavaExec) {
    group = 'utility'
    description = 'Download Google TTS credentials from S3 to local file'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.kiosk.backend.util.DownloadCredentials'

    // Pass environment variables
    environment 'DB_PASSWORD', System.getenv('DB_PASSWORD') ?: 'aioztesting'
    environment 'AWS_ACCESS_KEY_ID', System.getenv('AWS_ACCESS_KEY_ID')
    environment 'AWS_SECRET_ACCESS_KEY', System.getenv('AWS_SECRET_ACCESS_KEY')
    environment 'AWS_S3_BUCKET_NAME', System.getenv('AWS_S3_BUCKET_NAME')
    environment 'AWS_REGION', System.getenv('AWS_REGION') ?: 'ap-northeast-2'
}
